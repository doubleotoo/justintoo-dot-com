--- 
html: |-
  <p>A short one for today: How do I write <a href="http://en.wikipedia.org/wiki/YAML">YAML</a> files?</p>
  
  <p>Well, to get the prettiest results, I do something like this:</p>
  <pre><span class="PreProc">def</span> <span class="Function">write</span>(filename, hash)
    <span class="Type">File</span>.open(filename, <span class="rubyStringDelimiter">"</span><span class="String">w</span><span class="rubyStringDelimiter">"</span>) <span class="rubyControl">do</span> |<span class="Identifier">f</span>|
      f.write(yaml(hash))
    <span class="rubyControl">end</span>
  <span class="PreProc">end</span>
  
  <span class="PreProc">def</span> <span class="Function">yaml</span>(hash)
    method = hash.respond_to?(<span class="Constant">:ya2yaml</span>) ? <span class="Constant">:ya2yaml</span> : <span class="Constant">:to_yaml</span>
    string = hash.deep_stringify_keys.send(method)
    string.gsub(<span class="rubyStringDelimiter">"</span><span class="String">!ruby/symbol </span><span class="rubyStringDelimiter">"</span>, <span class="rubyStringDelimiter">"</span><span class="String">:</span><span class="rubyStringDelimiter">"</span>).sub(<span class="rubyStringDelimiter">"</span><span class="String">---</span><span class="rubyStringDelimiter">"</span>,<span class="rubyStringDelimiter">""</span>).split(<span class="rubyStringDelimiter">"</span><span class="Special">\n</span><span class="rubyStringDelimiter">"</span>).map(&amp;<span class="Constant">:rstrip</span>).join(<span class="rubyStringDelimiter">"</span><span class="Special">\n</span><span class="rubyStringDelimiter">"</span>).strip
  <span class="PreProc">end</span></pre>
  <p>I use the gem <a href="http://rubyforge.org/projects/ya2yaml/">ya2yaml</a> to create YAML, because the default
  Hash#to_yaml doesn&#39;t work well with UTF-8. If you have it installed and loaded, it uses that.</p>
  
  <p>Then I turn all keys into strings with the method <code>deep_stringify_keys</code>, so the keys don&#39;t get
  formatted like the symbols they are. I remove some random junk and strip whitespace.</p>
  
  <p>To add the <code>deep_stringify_keys</code>, open the Hash class:</p>
  <pre><span class="Keyword">class</span> <span class="Type">Hash</span>
    <span class="PreProc">def</span> <span class="Function">deep_stringify_keys</span>
      new_hash = {}
      <span class="Constant">self</span>.each <span class="rubyControl">do</span> |<span class="Identifier">key</span>, <span class="Identifier">value</span>|
        new_hash.merge!(key.to_s =&gt; (value.is_a?(<span class="Type">Hash</span>) ? value.deep_stringify_keys : value)))
      <span class="rubyControl">end</span>
    <span class="PreProc">end</span>
  <span class="Keyword">end</span></pre>
  <p>Here are the specs for this:</p>
  <pre><span class="Keyword">class</span> <span class="Type">Hash</span>
    <span class="PreProc">def</span> <span class="Function">deep_stringify_keys</span>
      new_hash = {}
      <span class="Constant">self</span>.each <span class="rubyControl">do</span> |<span class="Identifier">key</span>, <span class="Identifier">value</span>|
        new_hash.merge!(key.to_s =&gt; (value.is_a?(<span class="Type">Hash</span>) ? value.deep_stringify_keys : value)))
      <span class="rubyControl">end</span>
    <span class="PreProc">end</span>
  <span class="Keyword">end</span></pre>
toc: []

introduction: "<p>A short one for today: How do I write <a href=\"http://en.wikipedia.org/wiki/YAML\">YAML</a> files?</p><p>Well, to get the prettiest results, I do something like this:</p>"
